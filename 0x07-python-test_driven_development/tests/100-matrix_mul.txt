=========================
| MATRIX MULTIPLICATION |
=========================

Provides tests for a function that multiplies twho matrices

IMPORT
======
	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

RAISE EXCEPTIONS
================

	>>> matrix_mul()
	Traceback (most recent call last):
	TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	>>> matrix_mul([],[])
	Traceback (most recent call last):
	ValueError: m_a can't be empty

	>>> matrix_mul([[]],[[]])
        Traceback (most recent call last):
        ValueError: m_a can't be empty

	>>> matrix_mul([[]],[])
        Traceback (most recent call last):
        ValueError: m_b can't be empty

        >>> matrix_mul([[1]],[[]])
        Traceback (most recent call last):
        ValueError: m_b can't be empty

	>>> matrix_mul([1, 2, 10], [1.5, 5])
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

	>>> matrix_mul([[1, 3], [2, 9]], [10, 15])
	Traceback (most recent call last):
	TypeError: m_b must be a list of lists

	>>> matrix_mul([[1, 3], [2, 9]], [[1],[10, 15]])
	Traceback (most recent call last):
	TypeError: each row of m_b must be of the same size

	>>> matrix_mul([[1, 3], [2, 9]], [[1, 8],[10, "string"]])
	Traceback (most recent call last):
	TypeError: m_b should contain only integers or floats

	>>> matrix_mul([[1, 3], ["8", 9]], [[1, 8],[10, 5]])
	Traceback (most recent call last):
	TypeError: m_a should contain only integers or floats


	>>> matrix_mul([[1], [8]], [[1, 3, 8],[10, 0, 5]])
	Traceback (most recent call last):
	ValueError: m_a and m_b can't be multiplied


WORKING VALUES
==============

	>>> matrix_mul([[1, 3], [2, 9]], [[1, 8],[10, 15]])
	[[31, 53], [92, 151]]

	>>> matrix_mul([[1.7, 2.2]], [[3.9, 4.6], [5.0, 6.5]])
	[[17.63, 22.12]]

	>>> matrix_mul([[1, 2.7]], [[3, 44], [5.2, 6]])
	[[17.04, 60.2]]
